{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Integration","provenance":[],"collapsed_sections":["LCI0Wn_66be-"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"m4qD5fR8fA8F"},"outputs":[],"source":["import pandas as pd\n","import json"]},{"cell_type":"markdown","source":["#Caricamento dei tre dataset da integrare"],"metadata":{"id":"LCI0Wn_66be-"}},{"cell_type":"code","source":["url = 'https://drive.google.com/file/d/1fqnvPRGH1taFHGGscFydeHlwEv553oVu/view?usp=sharing'\n","path = 'https://drive.google.com/uc?export=download&id=' + url.split('/')[-2]\n","\n","Oscar_df = pd.read_csv(path, index_col=0)"],"metadata":{"id":"h--bvT97fE9K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["url = 'https://drive.google.com/file/d/1GRWuocW1KpLZMp1GHglZUs2HR8d0v9te/view?usp=sharing'\n","path = 'https://drive.google.com/uc?export=download&id=' + url.split('/')[-2]\n","\n","Movies_df = pd.read_json(path)"],"metadata":{"id":"nPfwLkXOhciX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["url = 'https://drive.google.com/file/d/1xi4-VufSYUfwFrY678WczVZ49knS0eae/view?usp=sharing'\n","path = 'https://drive.google.com/uc?export=download&id=' + url.split('/')[-2]\n","\n","Bechdel_df = pd.read_csv(path)"],"metadata":{"id":"tnmdPzMD5wvO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Si rinominano in modo opportuno gli attributi del dataframe ```Bechdel_df``` per renderlo coerente con ```Movies_df```. \n","\n"],"metadata":{"id":"7BoXFz3p79v1"}},{"cell_type":"code","source":["Bechdel_df = Bechdel_df.rename(columns={\"imdbid\" : \"titleId\", \"rating\" : \"BechdelScore\"}) "],"metadata":{"id":"W2iuzeaZ6gb_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Controllo della consistenza tra il dataset ```Oscar_df``` e ```Movies_df```"],"metadata":{"id":"5fHHV3Sc6iqr"}},{"cell_type":"code","source":["Oscar_df['film'].isin(Movies_df['primaryTitle']).value_counts() #valori contenuti in entrambi i dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IuFB93LLZQvU","executionInfo":{"status":"ok","timestamp":1644335248678,"user_tz":-60,"elapsed":20,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"62ee094d-1f68-4d86-8996-499ce779a1d3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True     218\n","False     21\n","Name: film, dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["Errori_df=Oscar_df.loc[Oscar_df['film'].isin(Movies_df['primaryTitle'])==False]\n","Errori_df['film'].unique()"],"metadata":{"id":"63T3sgNIZv80","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644335248679,"user_tz":-60,"elapsed":14,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"2f1216de-1c42-418c-873f-b41c5b5196e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Once upon a Time...in Hollywood', 'In the Absence',\n","       'Star Wars: The Rise of Skywalker', 'Dcera (Daughter)',\n","       'Nefta Football Club', 'A Sister',\n","       'Borat Subsequent Moviefilm: Delivery of Prodigious Bribe to American Regime for Make Benefit Once Glorious Nation of Kazakhstan',\n","       'The Life Ahead (La Vita Davanti a Se)', 'Burrow'], dtype=object)"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["Cercando i film presenti nel dataframe ```Oscar_df``` che non sono presenti nel dataframe ```Movies_df```, si trovano 21 valori differenti, corrisponenti in realtà a 9 film. \n","Si è quindi provato a cercare se questi film sono completamente assenti dal dataframe ```Movies_df``` o se ci sono delle differenze nella scrittura del titolo, nel tentativo di ridurre il numero di incongruenze.\n"],"metadata":{"id":"b1jIDt358k5Z"}},{"cell_type":"code","source":["Movies_df[Movies_df['primaryTitle'].str.contains('Hollywood')]\n","Movies_df[Movies_df['primaryTitle'].str.contains('Star Wars')]\n","Movies_df[Movies_df['primaryTitle'].str.contains('Borat')]\n","Movies_df[Movies_df['primaryTitle'].str.contains('Life Ahead')]\n","Movies_df[Movies_df['primaryTitle'].str.contains('In the Absence')]\n","Movies_df[Movies_df['primaryTitle'].str.contains('Dcera (Daughter)')]\n","Movies_df[Movies_df['primaryTitle'].str.contains('Daughter')]\n","Movies_df[Movies_df['primaryTitle'].str.contains('Nefta Football Club')]\n","Movies_df[Movies_df['primaryTitle'].str.contains('A Sister')]\n","Movies_df[Movies_df['primaryTitle'].str.contains('Burrow')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CZMafkFg7OIx","executionInfo":{"status":"ok","timestamp":1644335249261,"user_tz":-60,"elapsed":594,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"6e8a0a2c-610c-4a3f-f351-d05bc5aa8a32"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: UserWarning: This pattern has match groups. To actually get the groups, use str.extract.\n","  \n"]},{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-9f44adb6-7dfa-4b93-99f7-e679a406d645\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>titleId</th>\n","      <th>titleType</th>\n","      <th>primaryTitle</th>\n","      <th>isAdult</th>\n","      <th>Year</th>\n","      <th>genres</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","      <th>Worldwide</th>\n","      <th>Domestic</th>\n","      <th>Foreign</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f44adb6-7dfa-4b93-99f7-e679a406d645')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9f44adb6-7dfa-4b93-99f7-e679a406d645 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9f44adb6-7dfa-4b93-99f7-e679a406d645');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["Empty DataFrame\n","Columns: [titleId, titleType, primaryTitle, isAdult, Year, genres, averageRating, numVotes, Worldwide, Domestic, Foreign]\n","Index: []"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["Oscar_df.loc[Oscar_df.film =='Once upon a Time...in Hollywood','film']='Once Upon a Time... In Hollywood'\n","Oscar_df.loc[Oscar_df.film =='Borat Subsequent Moviefilm: Delivery of Prodigious Bribe to American Regime for Make Benefit Once Glorious Nation of Kazakhstan','film']='Borat Subsequent Moviefilm'\n","Oscar_df.loc[Oscar_df.film =='Star Wars: The Rise of Skywalker','film']='Star Wars: Episode IX - The Rise of Skywalker'\n","Oscar_df.loc[Oscar_df.film =='The Life Ahead (La Vita Davanti a Se)','film']='The Life Ahead'\n","Oscar_df.loc[Oscar_df.film =='Dcera (Daughter)','film']='Daughter'"],"metadata":{"id":"wK6-3ijNnpSy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Oscar_df['film'].isin(Movies_df['primaryTitle']).value_counts() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644335249264,"user_tz":-60,"elapsed":76,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"91e392b6-ccf1-4d0d-e004-ded50318469e","id":"4IM2lU02n1c2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True     235\n","False      4\n","Name: film, dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["Errori_df=Oscar_df.loc[Oscar_df['film'].isin(Movies_df['primaryTitle'])==False]\n","Errori_df['film'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hggBfllRhrd6","executionInfo":{"status":"ok","timestamp":1644335249278,"user_tz":-60,"elapsed":58,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"293483d2-e1af-4274-f144-bc376c8b97c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['In the Absence', 'Nefta Football Club', 'A Sister', 'Burrow'],\n","      dtype=object)"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["Dopo le correzioni rimangono ancora 4 film non presenti nel dataframe ```Movies_df```."],"metadata":{"id":"45aoONpx90Cl"}},{"cell_type":"markdown","source":["#Raggruppamento per film del dataset dei premi Oscar per ricavare per ogni film il numero di nomination e il numero di premi vinti"],"metadata":{"id":"rJhkC1pD67RC"}},{"cell_type":"code","source":["Oscar_df_groups = Oscar_df.groupby(['film']) #group by sui film"],"metadata":{"id":"k33ilHhvf_Em"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["win=nominees=0\n","#Costruzione di un DataFrame\n","premi_df=pd.DataFrame(columns=['primaryTitle', 'Year', 'OscarNominations', 'OscarWin'])\n","for movie in Oscar_df['film'].unique():\n","  movie_df=Oscar_df_groups.get_group((movie))\n","  for row in movie_df.itertuples():\n","    if row.winner==True: \n","      win=win+1\n","    else: nominees=nominees+1\n","  premi_df=premi_df.append({'primaryTitle': movie, 'Year' : movie_df.year_film.values[0], 'OscarNominations': nominees, 'OscarWin' : win}, ignore_index=True)\n","  win=nominees=0\n"],"metadata":{"id":"ImMuNc8d4h8R"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Integrazione "],"metadata":{"id":"bZUZYxF07Bh-"}},{"cell_type":"markdown","source":["Innanzitutto si rimuove l'attributo ```'title'``` dal datase ```Bechdel_df``` perché i film sono identificati univocamente dal codice ```'titleId'```\n","\n","\n","\n"],"metadata":{"id":"deCHGDLpSWoe"}},{"cell_type":"code","source":["Bechdel_df=Bechdel_df.drop(['title', 'year'], axis=1) #eliminazione di queste due colonne"],"metadata":{"id":"i9vEduGrHCCe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Si procede quindi all'integrazione dei dataset ```Movies_df``` con ```Bechdel_df``` facendo un full outer join sull'attributo ```titleId```. \n","\n","\n","\n"],"metadata":{"id":"xb0bZqdcSpjP"}},{"cell_type":"code","source":["df_integrated_pz = Movies_df.merge(Bechdel_df, how='outer', on='titleId') #dataset integrato parziale"],"metadata":{"id":"7I2qVYyong3L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_integrated_pz.info() #info sul dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EGQkBV6jHREk","executionInfo":{"status":"ok","timestamp":1644335250243,"user_tz":-60,"elapsed":24,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"cdfdac5d-0246-4c05-b3cc-ad26ac1e4cf3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 34873 entries, 0 to 34872\n","Data columns (total 13 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   titleId        34873 non-null  object \n"," 1   titleType      34833 non-null  object \n"," 2   primaryTitle   34833 non-null  object \n"," 3   isAdult        34833 non-null  float64\n"," 4   Year           34833 non-null  float64\n"," 5   genres         34833 non-null  object \n"," 6   averageRating  34833 non-null  float64\n"," 7   numVotes       34833 non-null  float64\n"," 8   Worldwide      507 non-null    object \n"," 9   Domestic       507 non-null    object \n"," 10  Foreign        507 non-null    object \n"," 11  BechdelScore   492 non-null    float64\n"," 12  dubious        492 non-null    float64\n","dtypes: float64(6), object(7)\n","memory usage: 3.7+ MB\n"]}]},{"cell_type":"markdown","source":["Da un controllo sul dataset ```df_integrated_pz``` risulta che 40 film presenti nel dataset ```Bechdel_df``` non sono presenti nel dataset ```Movies_df```, dunque si procede alla loro eliminazione."],"metadata":{"id":"WDQV77JTS8Ot"}},{"cell_type":"code","source":["df_integrated_pz.dropna(subset=['primaryTitle'], inplace=True) #eliminazione delle righe con valori nulli nella colonna \"primary_title\""],"metadata":{"id":"iFLTrpZFIr0s"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Si procede quindi all'integrazione dei dataset ```df_integrated_pz``` con ```premi_df``` facendo un full outer join sugli attributi ```primaryTitle``` e ```Year```. È stato scelto di usare entrambi gli attributi, e non solamente il nome del film, perché potrebbero esistere diversi film con lo stesso titolo ma diverso anno di produzione, in questo modo si cerca di identificare correttamente solo il film effettivamente candidato o vincitore di un premio Oscar.\n"],"metadata":{"id":"JjueCxFcTNkr"}},{"cell_type":"code","source":["df_integrated = df_integrated_pz.merge(premi_df, how='outer', on=['primaryTitle', 'Year'])"],"metadata":{"id":"aTZrHXTRqPMK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_integrated.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mwcJvveiUH21","executionInfo":{"status":"ok","timestamp":1644335250592,"user_tz":-60,"elapsed":369,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"f23b62aa-40bb-4a2a-851b-77078068d57d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 34849 entries, 0 to 34848\n","Data columns (total 15 columns):\n"," #   Column            Non-Null Count  Dtype  \n","---  ------            --------------  -----  \n"," 0   titleId           34833 non-null  object \n"," 1   titleType         34833 non-null  object \n"," 2   primaryTitle      34849 non-null  object \n"," 3   isAdult           34833 non-null  float64\n"," 4   Year              34849 non-null  object \n"," 5   genres            34833 non-null  object \n"," 6   averageRating     34833 non-null  float64\n"," 7   numVotes          34833 non-null  float64\n"," 8   Worldwide         507 non-null    object \n"," 9   Domestic          507 non-null    object \n"," 10  Foreign           507 non-null    object \n"," 11  BechdelScore      452 non-null    float64\n"," 12  dubious           452 non-null    float64\n"," 13  OscarNominations  116 non-null    object \n"," 14  OscarWin          116 non-null    object \n","dtypes: float64(5), object(10)\n","memory usage: 4.3+ MB\n"]}]},{"cell_type":"markdown","source":["Risultano esserci 17 film del dataset ```Oscar_df``` che non coincidono con film del dataset ```df_integrated_pz```, quando dallo studio sui titoli dei film risultava essercene solo 5 dunque vengono studiati più approfonditamente gli errori. "],"metadata":{"id":"UVeS-8zNUNQS"}},{"cell_type":"code","source":["df_integrated[df_integrated['titleId'].isnull()] #righe con valore nullo di \"titleId\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":737},"id":"FMhFkwItISwx","executionInfo":{"status":"ok","timestamp":1644335250595,"user_tz":-60,"elapsed":18,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"c4fa7a0f-caa7-48b1-fd1f-d881c29d6968"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-26f42bb3-3170-45cd-a067-0834e685712c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>titleId</th>\n","      <th>titleType</th>\n","      <th>primaryTitle</th>\n","      <th>isAdult</th>\n","      <th>Year</th>\n","      <th>genres</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","      <th>Worldwide</th>\n","      <th>Domestic</th>\n","      <th>Foreign</th>\n","      <th>BechdelScore</th>\n","      <th>dubious</th>\n","      <th>OscarNominations</th>\n","      <th>OscarWin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>34833</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>In the Absence</td>\n","      <td>NaN</td>\n","      <td>2019</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34834</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Nefta Football Club</td>\n","      <td>NaN</td>\n","      <td>2019</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34835</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>A Sister</td>\n","      <td>NaN</td>\n","      <td>2019</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34836</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Sound of Metal</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>34837</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Judas and the Black Messiah</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>34838</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>The United States vs. Billie Holiday</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34839</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>A Shaun the Sheep Movie: Farmageddon</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34840</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Emma</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34841</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Pinocchio</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34842</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Collective</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34843</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>A Love Song for Latasha</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34844</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Better Days</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34845</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Burrow</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34846</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Feeling Through</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34847</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>White Eye</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34848</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>The White Tiger</td>\n","      <td>NaN</td>\n","      <td>2020</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26f42bb3-3170-45cd-a067-0834e685712c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-26f42bb3-3170-45cd-a067-0834e685712c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-26f42bb3-3170-45cd-a067-0834e685712c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      titleId titleType  ... OscarNominations  OscarWin\n","34833     NaN       NaN  ...                1         0\n","34834     NaN       NaN  ...                1         0\n","34835     NaN       NaN  ...                1         0\n","34836     NaN       NaN  ...                3         2\n","34837     NaN       NaN  ...                4         2\n","34838     NaN       NaN  ...                1         0\n","34839     NaN       NaN  ...                1         0\n","34840     NaN       NaN  ...                2         0\n","34841     NaN       NaN  ...                2         0\n","34842     NaN       NaN  ...                2         0\n","34843     NaN       NaN  ...                1         0\n","34844     NaN       NaN  ...                1         0\n","34845     NaN       NaN  ...                1         0\n","34846     NaN       NaN  ...                1         0\n","34847     NaN       NaN  ...                1         0\n","34848     NaN       NaN  ...                1         0\n","\n","[16 rows x 15 columns]"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["Movies_df[Movies_df['primaryTitle'].str.contains('The White Tiger')] #2019\n","Movies_df[Movies_df['primaryTitle'].str.contains('White Eye')] #2019\n","Movies_df[Movies_df['primaryTitle'].str.contains('Feeling Through')] #2019\n","Movies_df[Movies_df['primaryTitle'].str.contains('Burrow')] #manca\n","Movies_df[Movies_df['primaryTitle'].str.contains('Better Days')] #2019\n","Movies_df[Movies_df['primaryTitle'].str.contains('A Love Song for Latasha')] #2019\n","Movies_df[Movies_df['primaryTitle'].str.contains('Collective')] #2019\n","Movies_df[Movies_df['primaryTitle'].str.contains('Pinocchio')] #2019\n","Movies_df[Movies_df['primaryTitle'].str.contains('A Shaun the Sheep Movie: Farmageddon')] #2019\n","Movies_df[Movies_df['primaryTitle'].str.contains('The United States vs. Billie Holiday')] #2021\n","Movies_df[Movies_df['primaryTitle'].str.contains('Judas and the Black Messiah')] #2021\n","Movies_df[Movies_df['primaryTitle'].str.contains('Sound of Metal')] #2019\n","Movies_df[Movies_df['primaryTitle'].str.contains('A Sister')] #manca \n","Movies_df[Movies_df['primaryTitle'].str.contains('In the Absence')] #manca\n","Movies_df[Movies_df['primaryTitle'].str.contains('Dcera')] #manca\n","Movies_df[Movies_df['primaryTitle'].str.contains('Nefta Football Club')] #manca \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49},"id":"KLq8sfG9Kdej","executionInfo":{"status":"ok","timestamp":1644335251401,"user_tz":-60,"elapsed":822,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"2902ca07-f0a9-43e7-8b3b-3a1d2b42c75a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-43868dde-029e-4959-be71-c3399e1406f8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>titleId</th>\n","      <th>titleType</th>\n","      <th>primaryTitle</th>\n","      <th>isAdult</th>\n","      <th>Year</th>\n","      <th>genres</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","      <th>Worldwide</th>\n","      <th>Domestic</th>\n","      <th>Foreign</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43868dde-029e-4959-be71-c3399e1406f8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-43868dde-029e-4959-be71-c3399e1406f8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-43868dde-029e-4959-be71-c3399e1406f8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["Empty DataFrame\n","Columns: [titleId, titleType, primaryTitle, isAdult, Year, genres, averageRating, numVotes, Worldwide, Domestic, Foreign]\n","Index: []"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["Vengono quindi corretti gli errori che è possibile correggere: \n"],"metadata":{"id":"xODcloE8UiX9"}},{"cell_type":"code","source":["premi_df.loc[premi_df.primaryTitle =='The White Tiger','Year']=2021\n","premi_df.loc[premi_df.primaryTitle =='White Eye','Year']=2019\n","premi_df.loc[premi_df.primaryTitle =='Feeling Through','Year']=2019\n","premi_df.loc[premi_df.primaryTitle =='Better Days','Year']=2019\n","premi_df.loc[premi_df.primaryTitle =='A Love Song for Latasha','Year']=2019\n","premi_df.loc[premi_df.primaryTitle =='Collective','Year']=2019\n","premi_df.loc[premi_df.primaryTitle =='Pinocchio','Year']=2019\n","premi_df.loc[premi_df.primaryTitle =='A Shaun the Sheep Movie: Farmageddon','Year']=2019\n","premi_df.loc[premi_df.primaryTitle =='The United States vs. Billie Holiday','Year']=2021\n","premi_df.loc[premi_df.primaryTitle =='Judas and the Black Messiah','Year']=2021\n","premi_df.loc[premi_df.primaryTitle =='Sound of Metal','Year']=2019\n","premi_df.loc[premi_df.primaryTitle =='Emma','primaryTitle']='Emma.'"],"metadata":{"id":"LTrS8Iw1PHxr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["E viene effettuata nuovamente l'integrazione usando il dataset corretto e si rimuovo i record privi di titleId:"],"metadata":{"id":"erIHnXtXUqTC"}},{"cell_type":"code","source":["df_integrated = df_integrated_pz.merge(premi_df, how='outer', on=['primaryTitle', 'Year'])"],"metadata":{"id":"HiaRD2EBQly_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_integrated.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iKiX641PQurp","executionInfo":{"status":"ok","timestamp":1644335251857,"user_tz":-60,"elapsed":470,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"5bf3aa81-e1d8-483b-9192-73fac4a2b4df"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 34837 entries, 0 to 34836\n","Data columns (total 15 columns):\n"," #   Column            Non-Null Count  Dtype  \n","---  ------            --------------  -----  \n"," 0   titleId           34833 non-null  object \n"," 1   titleType         34833 non-null  object \n"," 2   primaryTitle      34837 non-null  object \n"," 3   isAdult           34833 non-null  float64\n"," 4   Year              34837 non-null  object \n"," 5   genres            34833 non-null  object \n"," 6   averageRating     34833 non-null  float64\n"," 7   numVotes          34833 non-null  float64\n"," 8   Worldwide         507 non-null    object \n"," 9   Domestic          507 non-null    object \n"," 10  Foreign           507 non-null    object \n"," 11  BechdelScore      452 non-null    float64\n"," 12  dubious           452 non-null    float64\n"," 13  OscarNominations  117 non-null    object \n"," 14  OscarWin          117 non-null    object \n","dtypes: float64(5), object(10)\n","memory usage: 4.3+ MB\n"]}]},{"cell_type":"code","source":["df_integrated.dropna(subset=['titleId'], inplace=True) #eliminate le righe con valore di \"titleId\" nullo"],"metadata":{"id":"NcRykLwOVyQh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_integrated.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pBRsqvlRV2Fj","executionInfo":{"status":"ok","timestamp":1644335251859,"user_tz":-60,"elapsed":14,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"999540e4-5014-4cb4-8db8-f3324118281a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 34833 entries, 0 to 34832\n","Data columns (total 15 columns):\n"," #   Column            Non-Null Count  Dtype  \n","---  ------            --------------  -----  \n"," 0   titleId           34833 non-null  object \n"," 1   titleType         34833 non-null  object \n"," 2   primaryTitle      34833 non-null  object \n"," 3   isAdult           34833 non-null  float64\n"," 4   Year              34833 non-null  object \n"," 5   genres            34833 non-null  object \n"," 6   averageRating     34833 non-null  float64\n"," 7   numVotes          34833 non-null  float64\n"," 8   Worldwide         507 non-null    object \n"," 9   Domestic          507 non-null    object \n"," 10  Foreign           507 non-null    object \n"," 11  BechdelScore      452 non-null    float64\n"," 12  dubious           452 non-null    float64\n"," 13  OscarNominations  113 non-null    object \n"," 14  OscarWin          113 non-null    object \n","dtypes: float64(5), object(10)\n","memory usage: 4.3+ MB\n"]}]},{"cell_type":"markdown","source":["Studiando il dataset integrato si vede che ci sono undici film vincitori di un premio Oscar (o nominati) che hanno un film omonimo e prodotto nello stesso anno, al quale con la funzione merge è stato ugualmente aggiunto il valore di nomination e vittorie agli Oscar. Si procede dunque all'eliminazione manuale di questi valori nel record corrispondente. "],"metadata":{"id":"XpRgkoiWXvEF"}},{"cell_type":"code","source":["df_integrated[df_integrated['OscarWin'].notnull()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":713},"id":"YAtX0U3RW9TX","executionInfo":{"status":"ok","timestamp":1644335251869,"user_tz":-60,"elapsed":21,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"6d9488e6-b58c-479f-b97f-74c8992bd542"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-7ad1ddf5-c5af-4ff9-9ed3-670c08a59919\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>titleId</th>\n","      <th>titleType</th>\n","      <th>primaryTitle</th>\n","      <th>isAdult</th>\n","      <th>Year</th>\n","      <th>genres</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","      <th>Worldwide</th>\n","      <th>Domestic</th>\n","      <th>Foreign</th>\n","      <th>BechdelScore</th>\n","      <th>dubious</th>\n","      <th>OscarNominations</th>\n","      <th>OscarWin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>96</th>\n","      <td>tt10009148</td>\n","      <td>short</td>\n","      <td>St. Louis Superman</td>\n","      <td>0.0</td>\n","      <td>2019.0</td>\n","      <td>[Documentary, Drama, Short]</td>\n","      <td>6.8</td>\n","      <td>431.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1120</th>\n","      <td>tt10182854</td>\n","      <td>short</td>\n","      <td>Walk Run Cha-Cha</td>\n","      <td>0.0</td>\n","      <td>2019.0</td>\n","      <td>[Documentary, Short]</td>\n","      <td>6.0</td>\n","      <td>892.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1238</th>\n","      <td>tt10199590</td>\n","      <td>movie</td>\n","      <td>Les Misérables</td>\n","      <td>0.0</td>\n","      <td>2019.0</td>\n","      <td>[Crime, Drama, Thriller]</td>\n","      <td>7.6</td>\n","      <td>23372.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1747</th>\n","      <td>tt10272386</td>\n","      <td>movie</td>\n","      <td>The Father</td>\n","      <td>0.0</td>\n","      <td>2020.0</td>\n","      <td>[Drama, Mystery]</td>\n","      <td>8.3</td>\n","      <td>120293.0</td>\n","      <td>$24,244,012</td>\n","      <td>$2,122,771</td>\n","      <td>$22,121,241</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1855</th>\n","      <td>tt10288566</td>\n","      <td>movie</td>\n","      <td>Another Round</td>\n","      <td>0.0</td>\n","      <td>2020.0</td>\n","      <td>[Comedy, Drama]</td>\n","      <td>7.8</td>\n","      <td>130143.0</td>\n","      <td>$12,563,136</td>\n","      <td>-</td>\n","      <td>$12,563,136</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>33324</th>\n","      <td>tt9620292</td>\n","      <td>movie</td>\n","      <td>Promising Young Woman</td>\n","      <td>0.0</td>\n","      <td>2020.0</td>\n","      <td>[Crime, Drama, Mystery]</td>\n","      <td>7.5</td>\n","      <td>149351.0</td>\n","      <td>$17,135,557</td>\n","      <td>$6,460,965</td>\n","      <td>$10,674,592</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>34090</th>\n","      <td>tt9770150</td>\n","      <td>movie</td>\n","      <td>Nomadland</td>\n","      <td>0.0</td>\n","      <td>2020.0</td>\n","      <td>[Drama]</td>\n","      <td>7.3</td>\n","      <td>142779.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>34122</th>\n","      <td>tt9777644</td>\n","      <td>movie</td>\n","      <td>Da 5 Bloods</td>\n","      <td>0.0</td>\n","      <td>2020.0</td>\n","      <td>[Adventure, Drama, War]</td>\n","      <td>6.5</td>\n","      <td>49247.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34170</th>\n","      <td>tt9784798</td>\n","      <td>movie</td>\n","      <td>Judas and the Black Messiah</td>\n","      <td>0.0</td>\n","      <td>2021.0</td>\n","      <td>[Biography, Drama, History]</td>\n","      <td>7.5</td>\n","      <td>68832.0</td>\n","      <td>$6,829,913</td>\n","      <td>$5,478,009</td>\n","      <td>$1,351,904</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>34270</th>\n","      <td>tt9806192</td>\n","      <td>movie</td>\n","      <td>I Lost My Body</td>\n","      <td>0.0</td>\n","      <td>2019.0</td>\n","      <td>[Animation, Drama, Fantasy]</td>\n","      <td>7.6</td>\n","      <td>30886.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>113 rows × 15 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ad1ddf5-c5af-4ff9-9ed3-670c08a59919')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7ad1ddf5-c5af-4ff9-9ed3-670c08a59919 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7ad1ddf5-c5af-4ff9-9ed3-670c08a59919');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["          titleId titleType  ... OscarNominations  OscarWin\n","96     tt10009148     short  ...                1         0\n","1120   tt10182854     short  ...                1         0\n","1238   tt10199590     movie  ...                1         0\n","1747   tt10272386     movie  ...                4         2\n","1855   tt10288566     movie  ...                1         1\n","...           ...       ...  ...              ...       ...\n","33324   tt9620292     movie  ...                3         1\n","34090   tt9770150     movie  ...                3         3\n","34122   tt9777644     movie  ...                1         0\n","34170   tt9784798     movie  ...                4         2\n","34270   tt9806192     movie  ...                1         0\n","\n","[113 rows x 15 columns]"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["from numpy.core.numeric import NaN #si mette il valore nullo nei film che in realtà non hanno vinto nulla, e non hanno ricevuto nomination\n","df_integrated.loc[df_integrated.titleId =='tt11006500','OscarWin']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt11006500','OscarNominations']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt5979556','OscarWin']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt5979556','OscarNominations']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt13830296','OscarWin']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt13830296','OscarNominations']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt8372368','OscarWin']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt8372368','OscarNominations']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt7178226','OscarWin']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt7178226','OscarNominations']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt13190652','OscarWin']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt13190652','OscarNominations']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt7220364','OscarWin']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt7220364','OscarNominations']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt8725704','OscarWin']=NaN\n","df_integrated.loc[df_integrated.titleId =='tt8725704','OscarNominations']=NaN\n"],"metadata":{"id":"o3sZUEvRYQYj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_integrated.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CU6kQYIKZsHQ","executionInfo":{"status":"ok","timestamp":1644335252208,"user_tz":-60,"elapsed":33,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"60ab6761-f149-4fa7-e78e-4a4940c4c48b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 34833 entries, 0 to 34832\n","Data columns (total 15 columns):\n"," #   Column            Non-Null Count  Dtype  \n","---  ------            --------------  -----  \n"," 0   titleId           34833 non-null  object \n"," 1   titleType         34833 non-null  object \n"," 2   primaryTitle      34833 non-null  object \n"," 3   isAdult           34833 non-null  float64\n"," 4   Year              34833 non-null  object \n"," 5   genres            34833 non-null  object \n"," 6   averageRating     34833 non-null  float64\n"," 7   numVotes          34833 non-null  float64\n"," 8   Worldwide         507 non-null    object \n"," 9   Domestic          507 non-null    object \n"," 10  Foreign           507 non-null    object \n"," 11  BechdelScore      452 non-null    float64\n"," 12  dubious           452 non-null    float64\n"," 13  OscarNominations  105 non-null    object \n"," 14  OscarWin          105 non-null    object \n","dtypes: float64(5), object(10)\n","memory usage: 4.3+ MB\n"]}]},{"cell_type":"markdown","source":["Viene convertito il dataframe in formato json e vengono rimossi i valori NaN dove presenti prima di esportare il dataset integrato nel file Integrated.json."],"metadata":{"id":"KHEvFHUqUyTE"}},{"cell_type":"code","source":["df_integrated.to_json('df_integrated.json', orient='records', lines=True) \n","df2 = pd.read_json('df_integrated.json', lines=True) \n","df2 = [{**x[i]} for i, x in df2.stack().groupby(level=0)] # elimino valori con NaN dal json"],"metadata":{"id":"AevjeV8xolmw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["with open('Integrated.json', 'w') as outfile:\n","    json.dump(df2, outfile)"],"metadata":{"id":"p-tN685jpJSn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# MongoDB\n","Per lo storage del dataset creato si è scelto di usare MongoDB. \n"],"metadata":{"id":"Ads9pZfIh-yt"}},{"cell_type":"code","source":["# install and start server\n","!apt-get install mongodb > log\n","!service mongodb start"],"metadata":{"id":"Qi_XHo4XiByv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644335274011,"user_tz":-60,"elapsed":1870,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"63aaab23-1f9a-4933-b959-b0052ecf71a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * Starting database mongodb\n","   ...done.\n"]}]},{"cell_type":"code","source":["statements=\"\"\"use admin\n","db.createUser(\n","    {\n","    user: \"admin\",\n","    pwd: \"DataMan2020!\",\n","    roles: [ { role: \"userAdminAnyDatabase\", db: \"admin\" } ]\n","    }\n",")\n","\"\"\"\n","with open(\"command.js\", \"w\") as f:\n","    f.write(statements)"],"metadata":{"id":"LkafKx1biJLN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!mongo < command.js"],"metadata":{"id":"eucELXymiMRy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644335274465,"user_tz":-60,"elapsed":460,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"33f07b50-7f77-4f21-f8cd-e33c017413ab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MongoDB shell version v3.6.3\n","connecting to: mongodb://127.0.0.1:27017\n","MongoDB server version: 3.6.3\n","switched to db admin\n","2022-02-08T15:47:53.875+0000 E QUERY    [thread1] Error: couldn't add user: User \"admin@admin\" already exists :\n","_getErrorWithCode@src/mongo/shell/utils.js:25:13\n","DB.prototype.createUser@src/mongo/shell/db.js:1437:15\n","@(shell):1:1\n","bye\n"]}]},{"cell_type":"code","source":["# Import the MongoClient class from pymongo package\n","from pymongo import MongoClient \n","# Import pprint to \"pretty\" print out the variables\n","from pprint import pprint"],"metadata":{"id":"-_-sKIM9iNoT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a client object to access the database\n","client = MongoClient()\n","# Show list Databases\n","client.list_database_names() # ['admin', 'local']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XU1gMjS7tVA5","executionInfo":{"status":"ok","timestamp":1644335274471,"user_tz":-60,"elapsed":20,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"f04564c7-8403-4a35-e0d0-db39959a4d9c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['admin', 'config', 'local', 'movies', 'moviesdb']"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["!mongoimport --authenticationDatabase=admin --authenticationMechanism=SCRAM-SHA-1 --db=moviesdb --collection=movies --file=./Integrated.json --jsonArray"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"utfYXdw_tCpR","executionInfo":{"status":"ok","timestamp":1644335274828,"user_tz":-60,"elapsed":371,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"e4f7c580-f399-44ab-90f3-191fa3f52422"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2022-02-08T15:47:54.020+0000\tconnected to: localhost\n","2022-02-08T15:47:54.571+0000\timported 34833 documents\n"]}]},{"cell_type":"code","source":["db = client.movies\n","movies= db.movies"],"metadata":{"id":"ACoBf_lDtI0u"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Prove di query sul dataset, per verificare che tutto funzioni correttamente. "],"metadata":{"id":"TKe-qWkcxnkj"}},{"cell_type":"code","source":["movies.find_one({'OscarWin': 1})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WamKEXuNtOSd","executionInfo":{"status":"ok","timestamp":1644335275298,"user_tz":-60,"elapsed":485,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"c9e0a9e1-26d9-491e-9e38-d3a49f3b464e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'BechdelScore': 1.0,\n"," 'Domestic': '-',\n"," 'Foreign': '$12,563,136',\n"," 'OscarNominations': 1.0,\n"," 'OscarWin': 1.0,\n"," 'Worldwide': '$12,563,136',\n"," 'Year': 2020,\n"," '_id': ObjectId('62027c0b18c1d5dca45280c8'),\n"," 'averageRating': 7.8,\n"," 'dubious': 0.0,\n"," 'genres': ['Comedy', 'Drama'],\n"," 'isAdult': 0,\n"," 'numVotes': 130143,\n"," 'primaryTitle': 'Another Round',\n"," 'titleId': 'tt10288566',\n"," 'titleType': 'movie'}"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["results = movies.find({'OscarNominations' : { '$gt' :  5, '$lt' : 10}})"],"metadata":{"id":"iYothsFGtdTd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for result in results:\n","  print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HTXZzDNEuCHE","executionInfo":{"status":"ok","timestamp":1644335275301,"user_tz":-60,"elapsed":29,"user":{"displayName":"Eleonora Rossi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13472966746223198985"}},"outputId":"9ed827d9-9b02-4cb3-9d0c-ffc3b31df3eb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'_id': ObjectId('62027c0b18c1d5dca452897d'), 'titleId': 'tt10618286', 'titleType': 'movie', 'primaryTitle': 'Mank', 'isAdult': 0, 'Year': 2020, 'genres': ['Biography', 'Comedy', 'Drama'], 'averageRating': 6.9, 'numVotes': 69502, 'BechdelScore': 1.0, 'dubious': 0.0, 'OscarNominations': 8.0, 'OscarWin': 2.0}\n","{'_id': ObjectId('62027c0b18c1d5dca4528bc0'), 'titleId': 'tt1070874', 'titleType': 'movie', 'primaryTitle': 'The Trial of the Chicago 7', 'isAdult': 0, 'Year': 2020, 'genres': ['Drama', 'History', 'Thriller'], 'averageRating': 7.8, 'numVotes': 166156, 'BechdelScore': 1.0, 'dubious': 0.0, 'OscarNominations': 6.0, 'OscarWin': 0.0}\n","{'_id': ObjectId('62027c0c18c1d5dca452e3d3'), 'titleId': 'tt7131622', 'titleType': 'movie', 'primaryTitle': 'Once Upon a Time... In Hollywood', 'isAdult': 0, 'Year': 2019, 'genres': ['Comedy', 'Drama'], 'averageRating': 7.6, 'numVotes': 664385, 'Worldwide': '$374,375,059', 'Domestic': '$142,502,728', 'Foreign': '$231,872,331', 'BechdelScore': 3.0, 'dubious': 0.0, 'OscarNominations': 8.0, 'OscarWin': 2.0}\n","{'_id': ObjectId('62027c0c18c1d5dca452e496'), 'titleId': 'tt7286456', 'titleType': 'movie', 'primaryTitle': 'Joker', 'isAdult': 0, 'Year': 2019, 'genres': ['Crime', 'Drama', 'Thriller'], 'averageRating': 8.4, 'numVotes': 1132663, 'Worldwide': '$1,074,251,311', 'Domestic': '$335,451,311', 'Foreign': '$738,800,000', 'BechdelScore': 3.0, 'dubious': 1.0, 'OscarNominations': 9.0, 'OscarWin': 2.0}\n","{'_id': ObjectId('62027c0c18c1d5dca452ee89'), 'titleId': 'tt8579674', 'titleType': 'movie', 'primaryTitle': '1917', 'isAdult': 0, 'Year': 2019, 'genres': ['Action', 'Drama', 'War'], 'averageRating': 8.3, 'numVotes': 526277, 'Worldwide': '$384,919,389', 'Domestic': '$159,227,644', 'Foreign': '$225,691,745', 'BechdelScore': 0.0, 'dubious': 0.0, 'OscarNominations': 7.0, 'OscarWin': 3.0}\n","{'_id': ObjectId('62027e4f18c1d5dca4542279'), 'titleId': 'tt10618286', 'titleType': 'movie', 'primaryTitle': 'Mank', 'isAdult': 0, 'Year': 2020, 'genres': ['Biography', 'Comedy', 'Drama'], 'averageRating': 6.9, 'numVotes': 69502, 'BechdelScore': 1.0, 'dubious': 0.0, 'OscarNominations': 8.0, 'OscarWin': 2.0}\n","{'_id': ObjectId('62027e4f18c1d5dca45424c0'), 'titleId': 'tt1070874', 'titleType': 'movie', 'primaryTitle': 'The Trial of the Chicago 7', 'isAdult': 0, 'Year': 2020, 'genres': ['Drama', 'History', 'Thriller'], 'averageRating': 7.8, 'numVotes': 166156, 'BechdelScore': 1.0, 'dubious': 0.0, 'OscarNominations': 6.0, 'OscarWin': 0.0}\n","{'_id': ObjectId('62027e5018c1d5dca4547cd4'), 'titleId': 'tt7131622', 'titleType': 'movie', 'primaryTitle': 'Once Upon a Time... In Hollywood', 'isAdult': 0, 'Year': 2019, 'genres': ['Comedy', 'Drama'], 'averageRating': 7.6, 'numVotes': 664385, 'Worldwide': '$374,375,059', 'Domestic': '$142,502,728', 'Foreign': '$231,872,331', 'BechdelScore': 3.0, 'dubious': 0.0, 'OscarNominations': 8.0, 'OscarWin': 2.0}\n","{'_id': ObjectId('62027e5018c1d5dca4547d98'), 'titleId': 'tt7286456', 'titleType': 'movie', 'primaryTitle': 'Joker', 'isAdult': 0, 'Year': 2019, 'genres': ['Crime', 'Drama', 'Thriller'], 'averageRating': 8.4, 'numVotes': 1132663, 'Worldwide': '$1,074,251,311', 'Domestic': '$335,451,311', 'Foreign': '$738,800,000', 'BechdelScore': 3.0, 'dubious': 1.0, 'OscarNominations': 9.0, 'OscarWin': 2.0}\n","{'_id': ObjectId('62027e5018c1d5dca454878a'), 'titleId': 'tt8579674', 'titleType': 'movie', 'primaryTitle': '1917', 'isAdult': 0, 'Year': 2019, 'genres': ['Action', 'Drama', 'War'], 'averageRating': 8.3, 'numVotes': 526277, 'Worldwide': '$384,919,389', 'Domestic': '$159,227,644', 'Foreign': '$225,691,745', 'BechdelScore': 0.0, 'dubious': 0.0, 'OscarNominations': 7.0, 'OscarWin': 3.0}\n"]}]}]}